{"version":3,"sources":["../../src/routes/comment.js"],"names":["router","get","req","res","context","models","Comment","find","comments","send","findById","params","commentId","comment","post","Post","postId","text","body","save","newid","mongoose","Types","ObjectId","id","push","console","error","delete","remove"],"mappings":";;;;;;;;;;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,SAAS,sBAAf;;AAEAA,OAAOC,GAAP,CAAW,GAAX;AAAA,sFAAgB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACSD,IAAIE,OAAJ,CAAYC,MAAZ,CAAmBC,OAAnB,CAA2BC,IAA3B,EADT;;AAAA;AACRC,oBADQ;AAAA,6CAEPL,IAAIM,IAAJ,CAASD,QAAT,CAFO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAAA;AAAA;AAAA;AAAA;;AAKAR,OAAOC,GAAP,CAAW,aAAX;AAAA,uFAA0B,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACFD,IAAIE,OAAJ,CAAYC,MAAZ,CAAmBC,OAAnB,CAA2BI,QAA3B,CACpBR,IAAIS,MAAJ,CAAWC,SADS,CADE;;AAAA;AAClBC,mBADkB;AAAA,8CAIjBV,IAAIM,IAAJ,CAASI,OAAT,CAJiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;;AAOAb,OAAOc,IAAP,CAAY,UAAZ;AAAA,uFAAwB,kBAAOZ,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACHY,eAAKL,QAAL,CAAcR,IAAIS,MAAJ,CAAWK,MAAzB,CADG;;AAAA;AAChBF,gBADgB;AAEhBD,mBAFgB,GAEN,IAAIP,iBAAJ,CAAY,EAAEW,MAAMf,IAAIgB,IAAJ,CAASD,IAAjB,EAAZ,CAFM;AAAA;AAAA,mBAGhBJ,QAAQM,IAAR,EAHgB;;AAAA;AAIhBC,iBAJgB,GAIRC,mBAASC,KAAT,CAAeC,QAAf,CAAwBV,QAAQW,EAAhC,CAJQ;;AAKtBV,iBAAKN,QAAL,CAAciB,IAAd,CAAmBL,KAAnB;AALsB;AAAA;AAAA,mBAOdN,KAAKK,IAAL,EAPc;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AASpBO,oBAAQC,KAAR;;AAToB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAaA3B,OAAO4B,MAAP,CAAc,aAAd;AAAA,uFAA6B,kBAAO1B,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACLD,IAAIE,OAAJ,CAAYC,MAAZ,CAAmBC,OAAnB,CAA2BI,QAA3B,CACpBR,IAAIS,MAAJ,CAAWC,SADS,CADK;;AAAA;AACrBC,mBADqB;;AAAA,iBAKvBA,OALuB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAMnBA,QAAQgB,MAAR,EANmB;;AAAA;AAAA,8CASpB1B,IAAIM,IAAJ,CAASI,OAAT,CAToB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7B;;AAAA;AAAA;AAAA;AAAA;;kBAYeb,M","file":"comment.js","sourcesContent":["import { Router } from 'express';\r\nimport Post from '../models/post';\r\nimport Comment from '../models/comment';\r\nimport mongoose from 'mongoose';\r\n\r\nconst router = Router();\r\n\r\nrouter.get('/', async (req, res) => {\r\n  const comments = await req.context.models.Comment.find();\r\n  return res.send(comments);\r\n});\r\n\r\nrouter.get('/:commentId', async (req, res) => {\r\n  const comment = await req.context.models.Comment.findById(\r\n    req.params.commentId\r\n  );\r\n  return res.send(comment);\r\n});\r\n\r\nrouter.post('/:postId', async (req, res) => {\r\n  const post = await Post.findById(req.params.postId);\r\n  const comment = new Comment({ text: req.body.text });\r\n  await comment.save();\r\n  const newid = mongoose.Types.ObjectId(comment.id);\r\n  post.comments.push(newid);\r\n  try {\r\n    await post.save();\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n});\r\n\r\nrouter.delete('/:commentId', async (req, res) => {\r\n  const comment = await req.context.models.Comment.findById(\r\n    req.params.commentId\r\n  );\r\n\r\n  if (comment) {\r\n    await comment.remove();\r\n  }\r\n\r\n  return res.send(comment);\r\n});\r\n\r\nexport default router;\r\n"]}