{"version":3,"sources":["../../src/routes/post.js"],"names":["router","get","req","res","context","models","Post","find","populate","posts","send","findById","params","postId","post","text","body","title","display","save","delete","remove"],"mappings":";;;;;;AAAA;;;;AAEA,IAAMA,SAAS,sBAAf;;AAEAA,OAAOC,GAAP,CAAW,GAAX;AAAA,qEAAgB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACMD,IAAIE,OAAJ,CAAYC,MAAZ,CAAmBC,IAAnB,CAAwBC,IAAxB,CAA6B,EAA7B,EAAiCC,QAAjC,CAA0C,MAA1C,CADN;;AAAA;AACRC,iBADQ;AAAA,6CAEPN,IAAIO,IAAJ,CAASD,KAAT,CAFO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAAA;AAAA;AAAA;AAAA;;AAKAT,OAAOC,GAAP,CAAW,UAAX;AAAA,sEAAuB,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACFD,IAAIE,OAAJ,CAAYC,MAAZ,CAAmBC,IAAnB,CAAwBK,QAAxB,CAAiCT,IAAIU,MAAJ,CAAWC,MAA5C,EAChBL,QADgB,CACP,UADO,EAEhBA,QAFgB,CAEP,MAFO,CADE;;AAAA;AACfM,gBADe;AAAA,8CAIdX,IAAIO,IAAJ,CAASI,IAAT,CAJc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAOAd,OAAOc,IAAP,CAAY,GAAZ;AAAA,sEAAiB,kBAAOZ,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CACRA,IAAIO,IAAJ,CAAS,yBAAT,CADQ;;AAAA;AAETI,gBAFS;AAAA,8CAORX,IAAIO,IAAJ,CAASI,IAAT,CAPQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA;;AAUAd,OAAOc,IAAP,CAAY,UAAZ;AAAA,sEAAwB,kBAAOZ,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACHD,IAAIE,OAAJ,CAAYC,MAAZ,CAAmBC,IAAnB,CAAwBK,QAAxB,CAAiCT,IAAIU,MAAJ,CAAWC,MAA5C,CADG;;AAAA;AAChBC,gBADgB;;AAEtBA,iBAAKC,IAAL,GAAYb,IAAIc,IAAJ,CAASD,IAArB;AACAD,iBAAKG,KAAL,GAAaf,IAAIc,IAAJ,CAASC,KAAtB;AACAH,iBAAKI,OAAL,GAAehB,IAAIc,IAAJ,CAASE,OAAxB;AAJsB;AAAA,mBAKhBJ,KAAKK,IAAL,EALgB;;AAAA;AAAA,8CAMfhB,IAAIO,IAAJ,CAASI,IAAT,CANe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AASAd,OAAOoB,MAAP,CAAc,UAAd;AAAA,sEAA0B,kBAAOlB,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACLD,IAAIE,OAAJ,CAAYC,MAAZ,CAAmBC,IAAnB,CAAwBK,QAAxB,CAAiCT,IAAIU,MAAJ,CAAWC,MAA5C,CADK;;AAAA;AAClBC,gBADkB;;AAAA,iBAGpBA,IAHoB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAIhBA,KAAKO,MAAL,EAJgB;;AAAA;AAAA,8CAOjBlB,IAAIO,IAAJ,CAASI,IAAT,CAPiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;;kBAUed,M","file":"post.js","sourcesContent":["import { Router } from 'express';\r\n\r\nconst router = Router();\r\n\r\nrouter.get('/', async (req, res) => {\r\n  const posts = await req.context.models.Post.find({}).populate('user');\r\n  return res.send(posts);\r\n});\r\n\r\nrouter.get('/:postId', async (req, res) => {\r\n  const post = await req.context.models.Post.findById(req.params.postId)\r\n    .populate('comments')\r\n    .populate('user');\r\n  return res.send(post);\r\n});\r\n\r\nrouter.post('/', async (req, res) => {\r\n  return res.send('post route hit now post');\r\n  const post = await req.context.models.Post.create({\r\n    text: req.body.text,\r\n    user: req.context.me.id,\r\n  });\r\n\r\n  return res.send(post);\r\n});\r\n\r\nrouter.post('/:postId', async (req, res) => {\r\n  const post = await req.context.models.Post.findById(req.params.postId);\r\n  post.text = req.body.text;\r\n  post.title = req.body.title;\r\n  post.display = req.body.display;\r\n  await post.save();\r\n  return res.send(post);\r\n});\r\n\r\nrouter.delete('/:postId', async (req, res) => {\r\n  const post = await req.context.models.Post.findById(req.params.postId);\r\n\r\n  if (post) {\r\n    await post.remove();\r\n  }\r\n\r\n  return res.send(post);\r\n});\r\n\r\nexport default router;\r\n"]}